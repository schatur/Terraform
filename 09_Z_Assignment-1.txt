Create a file called main.tf.
Create a docker image resource and call it nginx_image.
Set the name of the image to nginx:latest.
Save and exit the file.

Initialize Terraform.
Plan the deploy and output a terraform plan called tf_image_plan.
Apply the plan using tf_image_plan.

vi main.tf

provider "docker" {
} 


resource "docker_image" "image_id" {
name="nginx:latest"
}


$ terraform init

Initializing the backend...

Initializing provider plugins...
- Checking for available provider plugins...
- Downloading plugin for provider "docker" (terraform-providers/docker) 2.7.0...

* provider.docker: version = "~> 2.7"

Terraform has been successfully initialized!



$ terraform plan -out tf_image_plan
This plan was saved to: tf_image_plan
To perform exactly these actions, run the following command to apply:
    terraform apply "tf_image_plan"


$ terraform apply "tf_image_plan"
docker_image.nginx_image: Creating...
docker_image.nginx_image: Creation complete after 1s [id=sha256:9beeba249f3ee158d3e495a6ac25c5667ae2de8a43ac2a8bfd2bf687a58c06c9nginx:latest]

Apply complete! Resources: 1 added, 0 changed, 0 destroyed.
	

$ docker image ls | grep nginx
nginx                    latest              4392e5dad77d        47 hours ago        132MB
nginx                    1.15.8              f09fe80eb0e7        16 months ago       109MB

